#include <stdio.h>
#include <iostream>
#include<string.h>
using namespace std;

//第一题 计算三位数的和
int main(){
	int a;
	int b = 0;
	cin >> a;
	while (a > 0) {
		b = b + a % 10;
		a = a / 10;
	}
	cout << b;
}

//第二题 只出现两次的数
int main() {
	int n;
	int flag = -1;
	cin >> n;
	int target[20],flagset[10];
	for (int i = 0; i<n; i++) {
		cin >> target[i];
	}
	for (int i = 0; i<n; i++) {
		int flag1 = 0;
		for (int k = 0; k<n; k ++) {
			if (target[i] == target[k]) {
				flag1++;
			}
			if (flag1 == 2) {
				int flag2 = 0;
				for (int j = 0; j<=flag; j ++) {
					if (target[k] == flagset[j])
						flag2++;
				}
				flag1 = 0;
				if (flag2 == 0) {
					flag++;
					flagset[flag] = target[k];
				}
			}
		}
	}

	if (flag >= 0) {
		for (int i = 0; i<=flag; i ++) {
			cout << flagset[i] <<" ";
		}
	}
	else cout << "none";
}

//第三题 电子邮件格式
int main() {
	char target[50];
	cin.getline(target, 50, '\n');
	int flag1 = 0, flag2 = 0, flag3 = 0;
	int length, n, loc;
	int num1=0,num2=0;
	length = strlen(target);
	for (int i = 0; i < length; i++) {
		if ((target[i] < 48 && target[i] != 46 && target[i] != 45) ||
			(target[i] > 57 && target[i] < 64) ||
			(target[i] > 90 && target[i] != 95 && target[i] < 97) ||
			target[i] > 122)
			flag1++;
		if (target[i] == 64) num1++;
		if (target[i] == 46) { num2++; loc = i; }
	}
	if (target[0] == 64 || target[length-1] == 64 || num1 != 1)
		flag2++;
	if (target[loc-1] == 64 || target[length-1] == 46 || num2 != 1)
		flag3++;
	if (flag1 == 0 && flag2 == 0 && flag3 == 0) cout << "yes";
	else cout << "no";
}

//第四题 计算分数之和
class A {
public:
	int n=0,flag=0;
	char target[100];
	int loc[10],son[10],mom[10];
	void findloc();
	void giveval();
	void add(int n);
};
//找/号的位置
void A::findloc() {
	int q = 0;
	for (int i = 0; i < sizeof(target); i++) {
		if (target[i] == '/') {
			loc[q] = i;
			q++;
			A::n++;
		}
	}
}
//赋值分子分母
void A::giveval() {
	for (int i = 0; i < n; i++) {
		son[i] = target[loc[i] - 1]-48;
		mom[i] = target[loc[i] + 1]-48;
		if (mom[i] == 0) flag++;
		if (i > 0) {
			if (target[loc[i] - 2] == '-') {
				son[i] = -son[i];
			}
		}
		else {
			if (target[0] == '-') son[i] = -son[i];
		}
	}

}
//将n个分数相加并输出和
void A::add(int n) {
	int proM = 1, sumS = 0;
	for (int i = 0; i < n; i++) {		
		proM = proM * mom[i];
	}
	for (int i=0;i<n;i++){
		sumS = sumS + son[i] * proM / mom[i]; 
	}
	int k=1;
	for (int i = 1; i <= sumS; i++) {
		if (sumS % i == 0 && proM % i == 0) {
			if (k < i) k = i;
		}
	}
	proM = proM / k; sumS = sumS / k;
	
	if (proM != 1)
		cout << sumS << '/' << proM;
	else cout << sumS;
}

int main() {
	A act;
	cin.getline(act.target, 100);
	act.findloc();
	act.giveval();
	if (act.flag == 0) {
		act.add(act.n);
	}
	else cout << "error";
}
